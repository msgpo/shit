#!/bin/sh
#
# http://github.com/mitchweaver/bin
#
# torrent manager using aria2c
#

# -*-*- config -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-
dir=~/.torrents
queue=$dir/queue
completed=$dir/completed
downloading=$dir/downloading
scripts=$dir/scripts
logs=$dir/logs
# -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*

usage() {
cat << EOF
torrent-queue
--------------------------
add    | -a    add a new link to the queue
daemon | -d    start the daemon
EOF
}

init() {
    mkdir -p "$dir" "$completed" "$downloading" "$scripts" "$logs"
    touch "$queue"
}

add() { echo "$1" | sed 's|udp.*|udp|' >>"$queue" ; }

dl() {
    cd "$downloading"
    link=$1

    # filename will be basename of link
    file=${link##*/}
    log=$logs/$file.log

    # create script to be ran at download completion
    >"$scripts/$file" printf "%s\n%s\n%s\n" \
        "#!/bin/sh" \
        "mv -f \"$downloading/$file\" \"$completed\"/" \
        "rm -f \"$log\""
    chmod +x "$scripts/$file"

    aria2c -d "$downloading/$file" \
        --on-bt-download-complete="$scripts/$file" \
        --file-allocation=prealloc \
        --check-integrity=true \
        --continue=true \
        --max-concurrent-downloads=20 \
        --seed-time=0 \
        "$link" >>"$log" 2>&1 &
}

daemon() {
    while sleep 5 ; do
        if ! pgrep -x openvpn >/dev/null ; then
            pkill -9 aria2c
            continue
        fi
        while [ -s "$queue" ] ; do
            read -r link <"$queue"
            sed -i '1d' "$queue"
            dl "$link"
        done
    done
}

init
case $1 in
    -a|add) [ "$2" ] && add "$2" ;;
    -d|daemon) daemon ;;
    *) usage
esac
